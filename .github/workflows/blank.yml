
name: 'Terraform-action'

on:
  push:
    branches:
      - main
    # paths:
    #   - '**/actions/terraform-azure/**'
  pull_request:
  workflow_dispatch: #this attribute will enable the manual run to the pipeline
  

jobs:
  terraform_plan:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    env: 
      ROOT_PATH: './Terraform'
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      TFVARS_FILE: ${{ github.event_name == 'push' && contains(github.event.ref, 'main') && 'prod.tfvars' ||
                    github.event_name == 'push' && contains(github.event.ref, 'staging') && 'staging.tfvars' ||
                    'dev.tfvars' }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
     - name: checkout
       uses: actions/checkout@v2
     - name: terraform
       uses: robertdebock/terraform-action@1.1.2
       with:
          action: init
          directory: ${{env.ROOT_PATH}}
     - name: terraform validate
       uses: robertdebock/terraform-action@1.1.2
       with:
          action: validate
          directory: ${{env.ROOT_PATH}}
     - name: Get Terrascan
       run: |
         curl --location https://github.com/accurics/terrascan/releases/download/v1.3.1/terrascan_1.3.1_Linux_x86_64.tar.gz --output terrascan.tar.gz
         tar -xvf terrascan.tar.gz
         sudo install terrascan /usr/local/bin
     - name: Run terrascan
       run: | 
         terrascan scan -t azure -i terraform
       working-directory: ${{ env.ROOT_PATH }}
     - name: terraform plan
       run: |
         terraform plan -var-file=${{env.TFVARS_FILE}}
       working-directory: ${{ env.ROOT_PATH }}
     - name: terraform apply
       run: |
         terraform apply -var-file=${{env.TFVARS_FILE}} -auto-approve
       working-directory: ${{ env.ROOT_PATH }}
